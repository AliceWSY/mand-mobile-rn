// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`renders correctly with defaults 1`] = `
<Modal
  animationType="none"
  hardwareAccelerated={false}
  hideModalContentWhileAnimating={false}
  onModalHide={[Function]}
  onRequestClose={[Function]}
  scrollOffset={0}
  scrollOffsetMax={0}
  scrollTo={null}
  supportedOrientations={
    Array [
      "portrait",
      "landscape",
    ]
  }
  swipeThreshold={100}
  transparent={true}
  visible={true}
>
  <View
    accessible={true}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      Object {
        "backgroundColor": "black",
        "bottom": 0,
        "height": 1334,
        "left": 0,
        "opacity": 0,
        "position": "absolute",
        "right": 0,
        "top": 0,
        "width": 750,
      }
    }
  />
  <View
    hideModalContentWhileAnimating={false}
    onModalHide={[Function]}
    pointerEvents="box-none"
    scrollOffset={0}
    scrollOffsetMax={0}
    scrollTo={null}
    style={
      Object {
        "alignItems": "center",
        "flex": 1,
        "justifyContent": "center",
        "margin": 0,
        "opacity": 0,
        "padding": 0,
        "transform": Array [
          Object {
            "translateY": 0,
          },
        ],
        "width": "100%",
      }
    }
    supportedOrientations={
      Array [
        "portrait",
        "landscape",
      ]
    }
    swipeThreshold={100}
  >
    <Image
      source={
        Object {
          "uri": "http://manhattan.didistatic.com/static/manhattan/do1_6VL7HL8TYaUMsIfygfpz",
        }
      }
      style={
        Object {
          "height": 328,
          "width": 252,
        }
      }
    />
    <View
      accessible={true}
      isTVSelectable={true}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "alignItems": "center",
          "borderColor": "#C5CAD5",
          "borderRadius": 50,
          "borderStyle": "solid",
          "flexDirection": "row",
          "height": 50,
          "justifyContent": "center",
        }
      }
    >
      <View
        style={
          Object {
            "flexDirection": "row",
          }
        }
      >
        <Text
          allowFontScaling={false}
          style={
            Array [
              Object {
                "color": "#FFF",
                "fontSize": 25,
              },
              undefined,
              Object {
                "fontFamily": "mand-mobile",
                "fontStyle": "normal",
                "fontWeight": "normal",
              },
              Object {},
            ]
          }
          type="MandMobile"
        >
          
        </Text>
      </View>
    </View>
  </View>
</Modal>
`;

exports[`renders correctly with fullscreen 1`] = `
<Modal
  animationType="none"
  hardwareAccelerated={false}
  hideModalContentWhileAnimating={false}
  onModalHide={[Function]}
  onRequestClose={[Function]}
  scrollOffset={0}
  scrollOffsetMax={0}
  scrollTo={null}
  supportedOrientations={
    Array [
      "portrait",
      "landscape",
    ]
  }
  swipeThreshold={100}
  transparent={true}
  visible={true}
>
  <View
    accessible={true}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      Object {
        "backgroundColor": "black",
        "bottom": 0,
        "height": 1334,
        "left": 0,
        "opacity": 0,
        "position": "absolute",
        "right": 0,
        "top": 0,
        "width": 750,
      }
    }
  />
  <View
    hideModalContentWhileAnimating={false}
    onModalHide={[Function]}
    pointerEvents="box-none"
    scrollOffset={0}
    scrollOffsetMax={0}
    scrollTo={null}
    style={
      Object {
        "alignItems": "center",
        "flex": 1,
        "justifyContent": "center",
        "margin": 0,
        "opacity": 0,
        "padding": 0,
        "transform": Array [
          Object {
            "translateY": 0,
          },
        ],
        "width": "100%",
      }
    }
    supportedOrientations={
      Array [
        "portrait",
        "landscape",
      ]
    }
    swipeThreshold={100}
  >
    <RCTScrollView
      contentContainerStyle={
        Object {
          "backgroundColor": "#FFF",
          "borderWidth": 0,
          "display": "flex",
          "justifyContent": "center",
          "paddingHorizontal": 16,
          "paddingVertical": 16,
        }
      }
    >
      <View>
        <Image
          source={
            Object {
              "uri": "http://manhattan.didistatic.com/static/manhattan/do1_6VL7HL8TYaUMsIfygfpz",
            }
          }
          style={
            Object {
              "height": 328,
              "width": 252,
            }
          }
        />
        <View
          accessible={true}
          isTVSelectable={true}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Object {
              "alignItems": "center",
              "backgroundColor": "#999",
              "borderColor": "#C5CAD5",
              "borderRadius": 50,
              "borderStyle": "solid",
              "flexDirection": "row",
              "height": 32,
              "justifyContent": "center",
              "position": "absolute",
              "right": 16,
              "top": 16,
              "width": 32,
            }
          }
        >
          <View
            style={
              Object {
                "flexDirection": "row",
              }
            }
          >
            <Text
              allowFontScaling={false}
              style={
                Array [
                  Object {
                    "color": "#FFF",
                    "fontSize": 25,
                  },
                  undefined,
                  Object {
                    "fontFamily": "mand-mobile",
                    "fontStyle": "normal",
                    "fontWeight": "normal",
                  },
                  Object {},
                ]
              }
              type="MandMobile"
            >
              
            </Text>
          </View>
        </View>
      </View>
    </RCTScrollView>
  </View>
</Modal>
`;
